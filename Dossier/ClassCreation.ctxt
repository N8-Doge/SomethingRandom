#BlueJ class context
comment0.target=ClassCreation
comment0.text=\r\n\ Menu\ to\ create\ a\ class\r\n\r\n\ @author\ \ \ \ \ \ Nathan\ Chen\r\n\ @version\ \ \ \ \ 3-5-19\r\n
comment1.params=buttonListeners\ classNames
comment1.target=ClassCreation(java.awt.event.ActionListener[],\ ClassObject[])
comment1.text=\r\n\ Creates\ the\ class\r\n\ \r\n\ @param\ \ \ buttonListeners\ \ \ Listeners\ for\ buttons\ in\ class\r\n
comment2.params=
comment2.target=javax.swing.JTextField[]\ getFields()
comment2.text=\r\n\ Returns\ the\ JTextFields\ of\ the\ class\r\n
comment3.params=j
comment3.target=boolean\ isValid(javax.swing.JTextField[])
comment3.text=\r\n\ Checks\ if\ the\ data\ in\ the\ JTextFields\ is\ valid\ for\ storing\r\n\ \r\n\ @param\ \ \ j\ \ \ Array\ of\ JTextFields\ that\ is\ being\ checked\r\n
comment4.params=j
comment4.target=void\ whyNot(javax.swing.JTextField[])
comment4.text=\r\n\ Tells\ the\ user\ with\ a\ JOptionPane\ why\ their\ text\ is\ invalid\r\n
comment5.params=
comment5.target=java.lang.String\ getStoreText()
comment5.text=\r\n\ Returns\ a\ String\ that\ is\ used\ for\ storing\ in\ files\r\n
comment6.params=classNames
comment6.target=void\ reset(ClassObject[])
comment6.text=\r\n\ Resets\ the\ class\ with\ new\ class\ names\ and\ blank\ JTextFields\r\n\ \r\n\ @param\ \ \ classNames\ \ Array\ of\ ClassObjects\ containing\ the\ class\ names\r\n
numComments=7
